
# setup Azure SP on local machine first

# GOAL: get sp.json with new Azure service principal that is Contributor on the subscription

# verify on Win machine that you are logged in
az account list --output table

# get subsctiption id
az account show --query "{subscriptionId:id}" --output tsv

# PWSH - https://shell.azure.com/powershell or local AZ CLI on Win?

# make sure you use PowerShell
pwsh

az account list --output table

$subscriptionId = az account show --query "{subscriptionId:id}" --output tsv
write-host "Subscription ID: $subscriptionId"

$envId = -join (1..8 | ForEach-Object { "{0:x}" -f (Get-Random -Max 16) })
write-host "Environment ID: $envId"

$spname = "sp-cgnsws-$envId"
write-host "SP Name: $spname"

$sp = az ad sp create-for-rbac --name $spname --role Owner --scopes /subscriptions/$subscriptionId -o json | ConvertFrom-Json
$sp | Add-Member -MemberType NoteProperty -Name envId -Value $envId
$sp | Add-Member -MemberType NoteProperty -Name subscriptionId -Value $subscriptionId
$sp | Add-Member -MemberType NoteProperty -Name name -Value $spname
$sp | ConvertTo-Json | Out-File -FilePath sp.json
gc sp.json

# copy the SP JSON to the Linux machine - e.g. /workspaces/cgns-azure-workshop-2025/sp.json
# e.g. cut & paste to 
# cat > /workspaces/cgns-azure-workshop-2025/sp.json
gc sp.json

###
# READER Azure SP

$readerSpname = "sp-cgnsws-reader-$envId"
write-host "READER SP Name: $readerSpname"

$sp = az ad sp create-for-rbac --name $readerSpname --role Reader --scopes /subscriptions/$subscriptionId -o json | ConvertFrom-Json
$sp | Add-Member -MemberType NoteProperty -Name envId -Value $envId
$sp | Add-Member -MemberType NoteProperty -Name subscriptionId -Value $subscriptionId
$sp | Add-Member -MemberType NoteProperty -Name name -Value $spname
$sp | ConvertTo-Json | Out-File -FilePath reader.json
gc reader.json

# copy the SP JSON to the Linux machine - e.g. /workspaces/cgns-azure-workshop-2025/reader.json
# e.g. cut & paste to 
# cat > /workspaces/cgns-azure-workshop-2025/reader.json
gc reader.json


####
# remove when finished
$sp = gc sp.json | ConvertFrom-Json
write-host "SP name: $($sp.name)"
az ad sp delete --id (gc sp.json | ConvertFrom-Json).appId

# remove READER SP when finished
$sp = gc reader.json | ConvertFrom-Json
write-host "READER SP name: $($sp.name)"
az ad sp delete --id (gc reader.json | ConvertFrom-Json).appId

# audit SPs
az ad sp list --show-mine --output table